/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.full.sight.oshi;

//libs para atualizar em tempo real
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
//lib para mostrar nome do SO
import oshi.PlatformEnum;

/**
 *
 * @author Aluno
 */
public class TelaMonitoramentoFS extends javax.swing.JFrame {

    MonitoramentoFS tela = new MonitoramentoFS();
    Timer t;

    void labelsMemoria() {
        t = new Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
        /*
        pbMemoriaUtilizada.setValue(tela.verMemoriaUsadaPb());

        pbMemoriaDisponivel.setValue(tela.verMemoriaPb());
         */
        lbMemoriaUtilizada.setText(tela.verMemoriaUsada(tela.hal.getMemory()));

        lbMemoriaDisponivel.setText(tela.verMemoriaDisponivel(tela.hal.getMemory()));

        lbMemoriaTotal.setText(tela.verMemoriaTotal(tela.hal.getMemory()));
        }
        });

        t.start();
    }

    void labelsCpu() {
        t = new Timer(1000, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                lbPorcentagemCpu.setText(tela.verPorcentagemCpu());

                lbFrequenciaCPU.setText(tela.verUsoCPU(tela.hal.getProcessor()));

                lbSO.setText(tela.verSO(PlatformEnum.LINUX));

                lbThreads.setText(tela.verThreads());

                lbPortasLogicas.setText(tela.verPortasLogicas());

                lbPortasLogicas1.setText(tela.verQtdProcessos());
                
            }
        });
                taProcessos.setText(tela.printProcesses(tela.os, tela.hal.getMemory()));

        t.start();

    }

    void labelsDisco() {
        lbEspacoLivre.setText(tela.verEspacoLivre());

        lbEspacoUtilizado.setText(tela.verEspacoUtilizado());

        lbEspacoTotal.setText(tela.verEspacoTotal());
    }

    public TelaMonitoramentoFS() {
        initComponents();
        setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbSO = new javax.swing.JLabel();
        lbPorcentagemCpu = new javax.swing.JLabel();
        lbFrequenciaCPU = new javax.swing.JLabel();
        lbThreads = new javax.swing.JLabel();
        lbPortasLogicas = new javax.swing.JLabel();
        lbPortasLogicas1 = new javax.swing.JLabel();
        btExecutar = new javax.swing.JButton();
        lbEspacoTotal = new javax.swing.JLabel();
        lbEspacoLivre = new javax.swing.JLabel();
        lbEspacoUtilizado = new javax.swing.JLabel();
        lbMemoriaTotal = new javax.swing.JLabel();
        lbMemoriaDisponivel = new javax.swing.JLabel();
        lbMemoriaUtilizada = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        taProcessos = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbSO.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbSO.setText("Sistema Operacional:");

        lbPorcentagemCpu.setText("Uso atual da CPU:");

        lbFrequenciaCPU.setText("Frequência da CPU:");

        lbThreads.setText("Quantidade de Threads:");

        lbPortasLogicas.setText("Quantidade de Portas lógicas:");

        lbPortasLogicas1.setText("Quantidade de Processos: ");

        btExecutar.setText("Buscar dados");
        btExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExecutarActionPerformed(evt);
            }
        });

        lbEspacoTotal.setText("Espaço total: ");

        lbEspacoLivre.setText("Espaço livre: ");

        lbEspacoUtilizado.setText("Espaço Utilizado:");

        lbMemoriaTotal.setText("Memória total:");

        lbMemoriaDisponivel.setText("Memória Disponível:");

        lbMemoriaUtilizada.setText("Memória Utlizada:");

        jLabel1.setText("%");

        taProcessos.setColumns(20);
        taProcessos.setRows(5);
        jScrollPane1.setViewportView(taProcessos);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("CPU");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("DISCO");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("RAM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbSO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(533, 533, 533))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPortasLogicas1)
                            .addComponent(lbFrequenciaCPU)
                            .addComponent(lbThreads)
                            .addComponent(lbPortasLogicas)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbPorcentagemCpu)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbEspacoTotal)
                            .addComponent(lbEspacoLivre)
                            .addComponent(lbEspacoUtilizado)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(lbMemoriaDisponivel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lbMemoriaUtilizada, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                            .addComponent(lbMemoriaTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(66, 66, 66))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(btExecutar)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbSO)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbPorcentagemCpu)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbFrequenciaCPU)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbThreads)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbPortasLogicas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbPortasLogicas1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbMemoriaUtilizada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbMemoriaDisponivel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbMemoriaTotal)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbEspacoUtilizado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbEspacoLivre)
                                .addGap(13, 13, 13)
                                .addComponent(lbEspacoTotal)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btExecutar)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExecutarActionPerformed
        labelsMemoria();
        labelsCpu();
        labelsDisco();
    }//GEN-LAST:event_btExecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaMonitoramentoFS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaMonitoramentoFS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaMonitoramentoFS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaMonitoramentoFS.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaMonitoramentoFS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btExecutar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbEspacoLivre;
    private javax.swing.JLabel lbEspacoTotal;
    private javax.swing.JLabel lbEspacoUtilizado;
    private javax.swing.JLabel lbFrequenciaCPU;
    private javax.swing.JLabel lbMemoriaDisponivel;
    private javax.swing.JLabel lbMemoriaTotal;
    private javax.swing.JLabel lbMemoriaUtilizada;
    private javax.swing.JLabel lbPorcentagemCpu;
    private javax.swing.JLabel lbPortasLogicas;
    private javax.swing.JLabel lbPortasLogicas1;
    private javax.swing.JLabel lbSO;
    private javax.swing.JLabel lbThreads;
    private javax.swing.JTextArea taProcessos;
    // End of variables declaration//GEN-END:variables
}
